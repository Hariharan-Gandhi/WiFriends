{"name":"Wifriends","tagline":"Decentralized Social Networking App using WiFi Direct","body":"WiFriends\r\n=========\r\n> ### Project: CN-Lab PS TU Darmstadt (WiSe-2014/15)\r\n\r\nDescritption:\r\n-----------\r\n**One-Liner:**  Decentralized Social Networking App using WiFi Direct \r\n(An Android App which helps in Socializing with Trusted Friends in\r\nProximity using D2D Communication)\r\n\r\nAs a part of the research idea, from the [Peer-to-Peer Systems Engineering Lab, TU Darmstad](http://www.ps.tu-darmstadt.de/teaching/cnlab/), to estimate the feasibility of latest mobile technology in creating an **ad-hoc peer to peer networks**, this project involved developing a Decentralized Social Networking application, that uses **Wi-Fi P2P API** for the overlay creation and it dynamically discovers peers in proximity to exchange profile information in `JSON` format.\r\n\r\nThe project considers **security** as a major aspect of concern in such ad-hoc communication and addresses by data encryption using pre-shared key `(AES 256)` exchanged securely via `Near Field Communication(NFC)` during the add friend stage. _Material Design UI_ (Android Lollipop) is also incorporated into the application.\r\n\r\n**Technologies Tag:** `Android`, `Java`, `SQLite`, `WifiP2P API`, `Cryptography`, `AES 256 Encryption`, `Spongy Castle API`, `Git`, `Material Design UI`, `Android Lollipop`, `Android Studio`\r\n\r\n\r\nKey features: \r\n------------\r\n* _Decentralized and without Internet_ - using Wi-Fi P2p API of Android\r\n* Exchanges only with _Trusted Friends_ - using NFC and local PINs to securely Add Friends to Trust Zone\r\n* Collected profiles are _stored Locally_ on user's devices - using `SQLite` DataHandlers and `JSON` objects\r\n*  User can later browse friends Profile - using Profile View UIs\r\n*  Automatic Content Exchange whenever friends are in Proximity via any D2D Communication Technique(WifiP2P) Network Service Discovery \r\n*  The app should be Secure - Only friends can exchange Contents  - using Encrypted exchange of Profile data AES-256 \r\n*  UI - As Less Interactions as possible - Implementing as foreground Service\r\n*  UI â€“ Appealing to view profiles\r\n\r\nCode Modules:\r\n--------\r\n* **Module:** `MAIN`  \r\n* **Module:** `addfriends`\r\n* **Module:** `castle`\r\n* **Module:** `datahandlers`\r\n* **Module:** `profilepage`\r\n\r\n####Tutor:\r\nLeonhard Nobach, M.Sc.\r\n\r\n#### Members:\r\n+ Hariharan Gandhi (hariharangandhi17@gmail.com)\r\n+ Harini Gunabalan (harinigunabalan24@gmail.com)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}